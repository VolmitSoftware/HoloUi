{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://volmit.com/holoui/schema.json",
  "title": "HoloUI Menu Config",
  "description": "Defines a HoloUI menu and all its components.",
  "type": "object",
  "required": [ "offset", "components" ],
  "properties": {
    "offset": {
      "description": "The offset from the players eye position, which acts as the center of the menu.",
      "$ref": "#/$defs/vector3"
    },
    "lockPosition": {
      "description": "Defines whether the player is able to move while a menu is open, or will be frozen in place.",
      "type": "boolean"
    },
    "followPlayer": {
      "description": "Defines whether the menu follows the player, or will be frozen in place.",
      "type": "boolean"
    },
    "components": {
      "description": "A list of menu components present in this menu.",
      "type": "array",
      "items": { "$ref": "#/$defs/component" }
    }
  },
  "$defs": {
    "vector3": {
      "title": "3D Vector",
      "description": "Represents a 3D floating-point vector.",
      "type": "array",
      "minItems": 3,
      "maxItems": 3,
      "items": { "type": "number" }
    },
    "component": {
      "title": "HoloUI Component Object",
      "description": "Defines the basic properties of a component.",
      "type": "object",
      "required": [ "id", "offset", "data"],
      "properties": {
        "id": {
          "description": "A unique identifier for this menu option.",
          "type": "string"
        },
        "offset": {
          "description": "The offset relative to the menus center point.",
          "$ref": "#/$defs/vector3"
        },
        "data": {
          "description": "The type and associated data of the object.",
          "$ref": "#/$defs/componentData"
        }
      }
    },

    "componentData": {
      "title": "Component Data Object",
      "description": "Defines the type and data of a component.",
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Defines the type of component.",
          "enum": [ "button", "decoration", "toggle" ]
        }
      },
      "allOf": [
        {
          "if": { "properties": { "type": { "const": "button" } } },
          "then": { "$ref": "#/$defs/buttonComponent" }
        },
        {
          "if": { "properties": { "type": { "const": "decoration" } } },
          "then": { "$ref": "#/$defs/decoComponent" }
        },
        {
          "if": { "properties": { "type": { "const": "toggle" } } },
          "then": { "$ref": "#/$defs/toggleComponent" }
        }
      ]
    },
    "action": {
      "title": "Component Action Data Object",
      "description": "Describes the actual effects of a interact-able component.",
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Defines the type of action.",
          "enum": [ "command", "sound" ]
        }
      },
      "allOf": [
        {
          "if": { "properties": { "type": { "const": "command" } } },
          "then": { "$ref": "#/$defs/commandAction" }
        },
        {
          "if": { "properties": { "type": { "const": "sound" } } },
          "then": { "$ref": "#/$defs/soundAction" }
        }
      ]
    },
    "icon": {
      "title": "Component Icon Data Object",
      "description": "Defines the visual parts of a component.",
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Defines the type of icon.",
          "enum": [ "text", "textImage", "animatedTextImage", "item" ]
        }
      },
      "allOf": [
        {
          "if": { "properties": { "type": { "const": "text" } } },
          "then": { "$ref": "#/$defs/textIcon" }
        },
        {
          "if": { "properties": { "type": { "const": "textImage" } } },
          "then": { "$ref": "#/$defs/textImageIcon" }
        },
        {
          "if": { "properties": { "type": { "const": "animatedTextImage" } } },
          "then": { "$ref": "#/$defs/animatedTextImageIcon" }
        },
        {
          "if": { "properties": { "type": { "const": "item" } } },
          "then": { "$ref": "#/$defs/itemIcon" }
        }
      ]
    },

    "buttonComponent": {
      "title": "Button Component Data Object",
      "description": "A object defining the data of a Button Component.",
      "type": "object",
      "required": [ "actions", "icon" ],
      "properties": {
        "highlightModifier": {
          "description": "Defines by how much a highlighted button moves towards the player.",
          "type": "number"
        },
        "actions": {
          "description": "Defines what happens upon a interaction.",
          "type": "array",
          "items": { "$ref": "#/$defs/action"}
        },
        "icon": {
          "description": "Defines the visual part of the component.",
          "$ref": "#/$defs/icon"
        }
      }
    },
    "decoComponent": {
      "title": "Decoration Component Data Object",
      "description": "A object defining the data of a Decorative Component.",
      "type": "object",
      "required": [ "icon" ],
      "properties": {
        "icon": {
          "description": "Defines the visual parts of a component.",
          "$ref": "#/$defs/icon"
        }
      }
    },
    "toggleComponent": {
      "title": "Toggle Component Data Object",
      "description": "A object defining the data of a Toggle Component.",
      "type": "object",
      "required": [ "condition", "expectedValue", "trueActions", "falseActions", "trueIcon", "falseIcon" ],
      "properties": {
        "highlightModifier": {
          "description": "Defines by how much a highlighted button moves towards the player.",
          "type": "number"
        },
        "condition": {
          "description": "Defines what placeholder value is used to determine the toggles initial state.",
          "type": "string"
        },
        "expectedValue": {
          "description": "Defines what the condition is checked against to determine the toggles initial state.",
          "type": "string"
        },
        "trueActions": {
          "description": "Defines what happens upon a interaction during a true state.",
          "type": "array",
          "items": { "$ref": "#/$defs/action"}
        },
        "falseActions": {
          "description": "Defines what happens upon a interaction during a false state.",
          "type": "array",
          "items": { "$ref": "#/$defs/action"}
        },
        "trueIcon": {
          "description": "Defines the visual part of the component in the true state.",
          "$ref": "#/$defs/icon"
        },
        "falseIcon": {
          "description": "Defines the visual part of the component in the true state.",
          "$ref": "#/$defs/icon"
        }
      }
    },

    "commandAction": {
      "title": "Command Action Data Object",
      "description": "A object defining the data of a Command Action.",
      "type": "object",
      "required": [ "command", "source"],
      "properties": {
        "command": {
          "description": "Defines the command ran by this action.",
          "type": "string"
        },
        "source": {
          "description": "Defines the source of this command.",
          "type": "string",
          "enum": [ "server", "player" ]
        }
      }
    },
    "soundAction": {
      "title": "Sound Action Data Object",
      "description": "A object defining the data of a Sound Action.",
      "type": "object",
      "required": [ "sound" ],
      "properties": {
        "sound": {
          "description": "Defines the sound played by this action.",
          "type": "string"
        },
        "source": {
          "description": "Defines the audio channel of this sound.",
          "type": "string",
          "enum": [ "master", "music", "record", "weather", "block", "hostile", "neutral", "player", "ambient", "voice" ]
        },
        "volume": {
          "description": "Defines the volume modifier for this sound.",
          "type": "number"
        },
        "pitch": {
          "description": "Defines the pitch modifier for this sound.",
          "type": "number"
        }
      }
    },

    "textIcon": {
      "title": "Text Icon Data Object",
      "description": "A object defining the data of a Text Icon.",
      "type": "object",
      "required": [ "text" ],
      "properties": {
        "text": {
          "description": "Defines the text displayed by this icon. Supports & colour, placeholders and linebreaks.",
          "type": "string"
        }
      }
    },
    "textImageIcon": {
      "title": "Text Image Icon Data Object",
      "description": "A object defining the data of a Text Image Icon.",
      "type": "object",
      "required": [ "path" ],
      "properties": {
        "path": {
          "description": "Defines the path to the image displayed, relative to the \"images\" directory.",
          "type": "string"
        }
      }
    },
    "animatedTextImageIcon": {
      "title": "Animated Text Image Icon Data Object",
      "description": "A object defining the data of an animated Text Image Icon.",
      "type": "object",
      "required": [ "source", "speed" ],
      "properties": {
        "path": {
          "description": "Defines the path to the image displayed, relative to the \"images\" directory.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "speed": {
          "description": "Defines the path to the image displayed, relative to the \"images\" directory.",
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "itemIcon": {
      "title": "Item Icon Data Object",
      "description": "A object defining the data of an Item Icon.",
      "type": "object",
      "required": [ "item"],
      "properties": {
        "item": {
          "description": "Defines the type of item displayed.",
          "type": "string"
        },
        "count": {
          "description": "Defines the count of the item stack constructed from the material."
        },
        "customModelData": {
          "description": "Defines the custom model data property for use with resource packs.",
          "type": "integer",
          "minimum": 0
        }
      }
    }
  }
}